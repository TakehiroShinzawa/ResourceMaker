<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ResourceizeText" xml:space="preserve">
    <value>Localize</value>
  </data>
  <data name="LabelTargetText.Text" xml:space="preserve">
    <value>Source Text</value>
  </data>
  <data name="LabelUpdatedText.Text" xml:space="preserve">
    <value>Replacement Text</value>
  </data>
  <data name="OriginalText.Text" xml:space="preserve">
    <value>Original Text</value>
  </data>
  <data name="ResourceKey.Text" xml:space="preserve">
    <value>Enter resource name</value>
  </data>
  <data name="ResourceGetterExpression.Content" xml:space="preserve">
    <value>Get Expr.</value>
  </data>
  <data name="Feedback.Content" xml:space="preserve">
    <value>Write Back</value>
  </data>
  <data name="SaveResource.Content" xml:space="preserve">
    <value>Apply Changes</value>
  </data>
  <data name="SaveAndClose.Content" xml:space="preserve">
    <value>Save Resource</value>
  </data>
  <data name="AddLanguage.Content" xml:space="preserve">
    <value>Add Language</value>
  </data>
  <data name="SelectLanguagesGuide.Text" xml:space="preserve">
    <value>Select the languages you want to use</value>
  </data>
  <data name="AdditionalLanguageCode.Text" xml:space="preserve">
    <value>Add a language code (e.g., it‑IT)</value>
  </data>
  <data name="LoaderDeclaration" xml:space="preserve">
    <value>I’ve sent the loader declaration to the clipboard.</value>
  </data>
  <data name="ClearCache.Content" xml:space="preserve">
    <value>Clear cache</value>
  </data>
  <data name="ProjectSelector.Text" xml:space="preserve">
    <value>Please select a project type.</value>
  </data>
  <data name="BtnCreate.Content" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="BtnCancel.Content" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="BtnClose.Content" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="BtnAdd.Content" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="BtnCreateToolTip" xml:space="preserve">
    <value>Create language files for checked items. Skip if already existing.</value>
  </data>
  <data name="BtnCancelToolTip" xml:space="preserve">
    <value>Cancel without adding language files or editing resources.</value>
  </data>
  <data name="BtnCloseToolTip" xml:space="preserve">
    <value>Close the language window, then edit the resources.</value>
  </data>
  <data name="BtnAddToolTip" xml:space="preserve">
    <value>Add a resource language. You can also press Enter to add it.</value>
  </data>
  <data name="ResultTextToolTip" xml:space="preserve">
    <value>Replaces the selected line.</value>
  </data>
  <data name="BaseTextsToolTip" xml:space="preserve">
    <value>Select the text to be resourced. 
If a resource key is shown, the registered value will be displayed.</value>
  </data>
  <data name="ResourceKeyToolTip" xml:space="preserve">
    <value>Enter the key name. 
In XAML, it will be defined as 'KeyName.TargetName'. Do not change the target name.</value>
  </data>
  <data name="ResourceGetterBoxToolTip" xml:space="preserve">
    <value>This code is auto-generated, but the retrieval method (loader.GetString) can be customized.</value>
  </data>
  <data name="FeedbackToolTip" xml:space="preserve">
    <value>If checked, the source text will be written back after creating the resource.</value>
  </data>
  <data name="SaveResourceToolTip" xml:space="preserve">
    <value>Saves the resource being edited to cache. You can continue editing.</value>
  </data>
  <data name="SaveAndCloseToolTip" xml:space="preserve">
    <value>Applies the edited resource globally. Ends editing and closes the window.</value>
  </data>
  <data name="AddLanguageToolTip" xml:space="preserve">
    <value>Add or remove language resources. The window will close after applying the settings.</value>
  </data>
  <data name="ClearCacheToolTip" xml:space="preserve">
    <value>Clears cached data. Be sure to press this if resources were edited externally.</value>
  </data>
  <data name="ApplyButton.Content" xml:space="preserve">
    <value>Apply</value>
  </data>
  <data name="BtnCsvOut.Content" xml:space="preserve">
    <value>CSV Export</value>
  </data>
  <data name="BtnMakeLoaderCode.Content" xml:space="preserve">
    <value>Export Loader Code</value>
  </data>
  <data name="BtnMakeLoaderCodeToolTip" xml:space="preserve">
    <value>Writes the loader code for UI language resources to ResourceAdder.cs</value>
  </data>
  <data name="MessageResourceFileNotFound" xml:space="preserve">
    <value>Resource settings have changed. 
The expected resource file could not be found.</value>
  </data>
  <data name="TitleResourceRetrievalFailed" xml:space="preserve">
    <value>Resource Retrieval Failed</value>
  </data>
  <data name="MessageTooltipConflict" xml:space="preserve">
    <value>The tooltip value overlaps with another property and cannot be localized. 
Please place it on a separate line from other properties.</value>
  </data>
  <data name="TitleTooltipConflict" xml:space="preserve">
    <value>Tooltips Are a Bit Special</value>
  </data>
  <data name="TitleResourceEditingMode" xml:space="preserve">
    <value>Resource Editing Mode</value>
  </data>
  <data name="MessageGenerateResourceCode" xml:space="preserve">
    <value>Code for loading all language resources will be generated.
The contents of 'ResourceAdder.cs' will be overwritten.</value>
  </data>
  <data name="TitleGenerateResourceCode" xml:space="preserve">
    <value>Overwrite Confirmation</value>
  </data>
  <data name="MessageResourceAdderOutputError" xml:space="preserve">
    <value>An error occurred while generating ResourceAdder.cs. 
{0}</value>
  </data>
  <data name="TitleFileWriteError" xml:space="preserve">
    <value>File Write Error</value>
  </data>
  <data name="MessageConfirmKeyDeletionAllLanguages" xml:space="preserve">
    <value>Do you want to delete the key '{0}' from all language resources?</value>
  </data>
  <data name="TitleConfirmResourceDeletion" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="NoteOutputToResourceAdder" xml:space="preserve">
    <value>Will be output to ResourceAdder.cs</value>
  </data>
  <data name="BtnClickme" xml:space="preserve">
    <value>Click me</value>
  </data>
  <data name="ManageLanguage.Content" xml:space="preserve">
    <value>Manage resources</value>
  </data>
  <data name="ResSeparatedByFolder" xml:space="preserve">
    <value> {0} (separated by folder)</value>
  </data>
  <data name="ResIntoFilename" xml:space="preserve">
    <value>{0} (inserted into filename)</value>
  </data>
  <data name="MissingResource_enUS" xml:space="preserve">
    <value>Resource for en-US not found</value>
  </data>
  <data name="NoLanguageSelected" xml:space="preserve">
    <value>No output target</value>
  </data>
  <data name="NoLanguageSelection" xml:space="preserve">
    <value>Please select a language to export</value>
  </data>
  <data name="CsvExportSuccess" xml:space="preserve">
    <value>CSV has been exported</value>
  </data>
  <data name="CsvExportCompleted" xml:space="preserve">
    <value>Export complete</value>
  </data>
  <data name="SelectCsvExportSettings" xml:space="preserve">
    <value>Please select CSV export settings</value>
  </data>
  <data name="MissingCsvExportSettings" xml:space="preserve">
    <value>Export settings missing</value>
  </data>
  <data name="SelectSingleLanguageForImport" xml:space="preserve">
    <value>Please select one language to import</value>
  </data>
  <data name="LanguageSelectionRequired" xml:space="preserve">
    <value>Language selection required</value>
  </data>
  <data name="InvalidCultureCodeEntered" xml:space="preserve">
    <value>The culture code is invalid</value>
  </data>
  <data name="InvalidCultureCode" xml:space="preserve">
    <value>Culture code error</value>
  </data>
  <data name="NoTextInClipboard" xml:space="preserve">
    <value>No text found in clipboard</value>
  </data>
  <data name="ClipboardEmpty" xml:space="preserve">
    <value>Clipboard empty</value>
  </data>
  <data name="SelectCsvFile" xml:space="preserve">
    <value>Select CSV file</value>
  </data>
  <data name="CsvFileFilter" xml:space="preserve">
    <value>CSV file (*.csv)|*.csv</value>
  </data>
  <data name="NoCultureCodeDetectedInFile" xml:space="preserve">
    <value>No culture code detected in the file</value>
  </data>
  <data name="CultureCodeNotFound" xml:space="preserve">
    <value>Culture code not found</value>
  </data>
  <data name="LanguageResourceAddedToTarget" xml:space="preserve">
    <value>Language resource(s) {0} have been added</value>
  </data>
  <data name="LanguageResourceAdded" xml:space="preserve">
    <value>Language resource added</value>
  </data>
  <data name="TargetCountMismatchWithDefinitions" xml:space="preserve">
    <value>The number of targets does not match the current definition count</value>
  </data>
  <data name="UnableToRetrieve" xml:space="preserve">
    <value>Unable to retrieve</value>
  </data>
  <data name="SelectLanguageForRelocation" xml:space="preserve">
    <value>Please select a language to relocate</value>
  </data>
  <data name="LanguageRelocationRequired" xml:space="preserve">
    <value>No language selected</value>
  </data>
  <data name="RelocationRootFolderNotSet" xml:space="preserve">
    <value>The relocation root folder has not been set</value>
  </data>
  <data name="RelocationRootFolderDoesNotExist" xml:space="preserve">
    <value>The relocation root folder does not exist</value>
  </data>
  <data name="InvalidRelocationFolderName" xml:space="preserve">
    <value>The relocation resource folder name is invalid</value>
  </data>
  <data name="InvalidRelocationFileName" xml:space="preserve">
    <value>The relocation resource file name is invalid</value>
  </data>
  <data name="RelocationFormatNotSelected" xml:space="preserve">
    <value>No relocation resource format has been selected</value>
  </data>
  <data name="RelocationDefinitionError" xml:space="preserve">
    <value>Relocation definition error</value>
  </data>
  <data name="RelocationErrorOccurred" xml:space="preserve">
    <value>An error occurred during relocation.
{0}</value>
  </data>
  <data name="RelocationRuntimeError" xml:space="preserve">
    <value>Relocation runtime error</value>
  </data>
  <data name="ChkCustom.Content" xml:space="preserve">
    <value>Custom settings</value>
  </data>
  <data name="CustomResFolder.Text" xml:space="preserve">
    <value>Resource folder ./</value>
  </data>
  <data name="CustmResourceName.Text" xml:space="preserve">
    <value>Resource file name (no extension)</value>
  </data>
  <data name="CustomResPtn.Text" xml:space="preserve">
    <value>Resource pattern</value>
  </data>
  <data name="ChkResw.Content" xml:space="preserve">
    <value>resw (separated by folder)</value>
  </data>
  <data name="ChkResx.Content" xml:space="preserve">
    <value>resx (inserted into file name)</value>
  </data>
  <data name="IsNewResource.Text" xml:space="preserve">
    <value>(Create new)</value>
  </data>
  <data name="BtnSelectAllLanguage.Content" xml:space="preserve">
    <value>Select all</value>
  </data>
  <data name="CsvOutputItem.Text" xml:space="preserve">
    <value>CSV output item:</value>
  </data>
  <data name="optVOnly.Content" xml:space="preserve">
    <value>Key only</value>
  </data>
  <data name="optKOnly.Content" xml:space="preserve">
    <value>Value only</value>
  </data>
  <data name="optKVP.Content" xml:space="preserve">
    <value>Key and value</value>
  </data>
  <data name="CsvOutputPath.Text" xml:space="preserve">
    <value>Select output destination:</value>
  </data>
  <data name="RBSameFolder.Content" xml:space="preserve">
    <value>Same folder</value>
  </data>
  <data name="RBPrjTop.Content" xml:space="preserve">
    <value>Project root</value>
  </data>
  <data name="RBClipboard.Content" xml:space="preserve">
    <value>Clipboard</value>
  </data>
  <data name="ChkWithHeader.Content" xml:space="preserve">
    <value>Merge into single file</value>
  </data>
  <data name="ChkWithHeaderToolTip" xml:space="preserve">
    <value>Adds a header row when checked</value>
  </data>
  <data name="GetCsv.Content" xml:space="preserve">
    <value>Import CSV</value>
  </data>
  <data name="ImportFromClipboard.Content" xml:space="preserve">
    <value>Import from clipboard</value>
  </data>
  <data name="ClipLangCodeToolTip" xml:space="preserve">
    <value>Enter the culture code to import as.</value>
  </data>
  <data name="LblCultureCode.Text" xml:space="preserve">
    <value>Culture Code</value>
  </data>
  <data name="RelocateGroup.Header" xml:space="preserve">
    <value>Resource Relocation</value>
  </data>
  <data name="LblCurrentResource.Text" xml:space="preserve">
    <value>Current Resource</value>
  </data>
  <data name="LblResourceFolder.Text" xml:space="preserve">
    <value>Resource Folder</value>
  </data>
  <data name="LblResourceName.Text" xml:space="preserve">
    <value>Resource Name</value>
  </data>
  <data name="LblFileFormat.Text" xml:space="preserve">
    <value>File Format</value>
  </data>
  <data name="LblRelocatedResource.Text" xml:space="preserve">
    <value>Relocated Resource</value>
  </data>
  <data name="LblRelResourceFolder.Text" xml:space="preserve">
    <value>Resource Folder</value>
  </data>
  <data name="LblRelResourceName.Text" xml:space="preserve">
    <value>Resource Name</value>
  </data>
  <data name="FileFormatResx.Content" xml:space="preserve">
    <value>RESX Format (.resx)</value>
  </data>
  <data name="FileFormatResw.Content" xml:space="preserve">
    <value>RESW Format (.resw)</value>
  </data>
  <data name="LblRelocationProjectFolder.Text" xml:space="preserve">
    <value>Relocation Project Folder</value>
  </data>
  <data name="BtnBrowseFolder.Content" xml:space="preserve">
    <value>Browse...</value>
  </data>
  <data name="BtnRelocateResource.Content" xml:space="preserve">
    <value>Execute Relocation</value>
  </data>
  <data name="LblSelectFolder.Title" xml:space="preserve">
    <value>Select Folder</value>
  </data>
  <data name="BtnMoveUpFolder.Content" xml:space="preserve">
    <value>↑ Up</value>
  </data>
  <data name="BtnCancelFolderSelection.Content" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="BtnConfirmFolderSelection.Content" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="LblRelFileFormat.Text" xml:space="preserve">
    <value>File Format</value>
  </data>
  <data name="ResourceGetterExpressionToolTip" xml:space="preserve">
    <value>Copies the resource loader declaration to the clipboard</value>
  </data>
  <data name="LanguageSelectionWindowName" xml:space="preserve">
    <value>Language Manager</value>
  </data>
  <data name="LblResourceWindow" xml:space="preserve">
    <value>Resource Management</value>
  </data>
  <data name="HelpLinkText.Text" xml:space="preserve">
    <value>Open Help Page</value>
  </data>
  <data name="HelpLinkLangToolTip" xml:space="preserve">
    <value>Only Japanese is available for now.</value>
  </data>
</root>